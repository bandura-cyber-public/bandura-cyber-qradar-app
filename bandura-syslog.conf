@version: 3.5

options {
        keep-hostname(yes);
        frac_digits(3);
        mark-freq(0);
        mark-mode(none);
        };

#Source for listening logs on 51454 port from the ThreatBlockr
source s_network_ThreatBlockr
{ 
syslog(transport(udp) port(51454) keep-hostname(yes)); 
};


#Filter to seperate packet logs(ip) received from ThreatBlockr.

filter packet_filter{

       match("packet_log" value("MSGID"));

};

#Filter to seperate domain logs received from ThreatBlockr.

filter domain_filter{

       match("dns_log" value("MSGID"));

};

#Filter to seperate audit logs received from ThreatBlockr.

filter audit_filter{

       match("audit_log" value("MSGID"));

};


#Filter to seperate system logs received from ThreatBlockr.
filter system_filter{

       match("system_log" value("MSGID"));

};


#Filter to catch all remaining logs which are not caught in the above filters

filter remaining_filter{

       not match("dns_log" value("MSGID")) and not match("packet_log" value("MSGID")) and not match("audit_log" value("MSGID")) and not match("system_log" value("MSGID"))  ;

};

#Destination for Packet logs received from ThreatBlockr.

destination d_packet_ThreatBlockr {

    file("/var/log/bandura/packet_received_from_ThreatBlockr.log" 
		perm(0744) 
		template("$ISODATE $HOST $MSGID: $MSG\n") 
		frac_digits(3)
	);
};

#Destination for Domain logs received from ThreatBlockr.

destination d_domain_ThreatBlockr {

    file("/var/log/bandura/domain_received_from_ThreatBlockr.log"
		perm(0744) 
		template("$ISODATE $HOST $MSGID: $MSG\n") 
		frac_digits(3) 
	);
};

#Destination for Audit  logs received from ThreatBlockr.

destination d_audit_ThreatBlockr {

    file("/var/log/bandura/audit_received_from_ThreatBlockr.log" 
		perm(0744) 
		template("$FACILITY $PRIORITY $ISODATE $HOST $MSG\n") 
		frac_digits(3)
	);
};


#Destination for system logs received from ThreatBlockr.
destination d_system_ThreatBlockr {

    file("/var/log/bandura/system_received_from_ThreatBlockr.log"
		template("$FACILITY $PRIORITY $ISODATE $HOST $MSG\n")
		perm(0744)
		frac_digits(3)
	);
};



#Destination for remaining logs apart from Packet and Domain.

destination d_remaining_ThreatBlockr {

    file("/var/log/bandura/remaining_received_from_ThreatBlockr.log"
		template("$MSGID --- $FACILITY $PRIORITY $ISODATE $HOST ---- $MSG\n")
		perm(0744)
		frac_digits(3)
    );
};


#Saving Packet logs from ThreatBlockr.

log {source(s_network_ThreatBlockr);
     filter(packet_filter);
     destination(d_packet_ThreatBlockr);
    };

#Saving Domain logs from ThreatBlockr.

log {source(s_network_ThreatBlockr);
     filter(domain_filter);
     destination(d_domain_ThreatBlockr);
    };

#Saving Audit logs from ThreatBlockr.

log {source(s_network_ThreatBlockr);
     filter(audit_filter);
     destination(d_audit_ThreatBlockr);
    };


#Saving System logs from ThreatBlockr.

log {source(s_network_ThreatBlockr);
     filter(system_filter);
     destination(d_system_ThreatBlockr);
    };


#Saving Remaining logs from ThreatBlockr.

log {source(s_network_ThreatBlockr);
     filter(remaining_filter);
     destination(d_remaining_ThreatBlockr);
    };
	


#Source for python script filtered logs.
source s_local_filtered {
        file("/var/log/bandura/filtered_logs.log");
        };

#Destination for sending filtered logs to Qradar
#please change the below IP with Splunk IP.

destination d_qradar_ip {
         network(
        "0.0.0.0"
        transport(udp)
        port(514)        
    );
        };


#Finally, Sending filter logs to Qradar ip
log { source(s_local_filtered);
      destination(d_qradar_ip);
    };


